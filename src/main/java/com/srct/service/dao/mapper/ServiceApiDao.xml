<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.srct.service.dao.mapper.ServiceApiDao">
  <resultMap id="BaseResultMap" type="com.srct.service.dao.entity.ServiceApi">
    <!--@mbg.generated generated on Sat Jul 27 21:44:17 CST 2019.-->
    <id column="api_id" jdbcType="VARCHAR" property="apiId" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="api_version" jdbcType="VARCHAR" property="apiVersion" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="need_login" jdbcType="VARCHAR" property="needLogin" />
    <result column="need_token" jdbcType="VARCHAR" property="needToken" />
    <result column="need_req_token" jdbcType="VARCHAR" property="needReqToken" />
    <result column="need_permit" jdbcType="VARCHAR" property="needPermit" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="valid" jdbcType="TINYINT" property="valid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated generated on Sat Jul 27 21:44:17 CST 2019.-->
    api_id, url, description, api_version, `status`, remark, author, need_login, need_token, 
    need_req_token, need_permit, create_time, last_update_time, `valid`
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated generated on Sat Jul 27 21:44:17 CST 2019.-->
    update co_service_api
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.url,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.description,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="api_version = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.apiVersion,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.status,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.remark,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="author = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.author,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="need_login = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.needLogin,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="need_token = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.needToken,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="need_req_token = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.needReqToken,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="need_permit = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.needPermit,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="last_update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.lastUpdateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`valid` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when api_id = #{item.apiId,jdbcType=VARCHAR} then #{item.valid,jdbcType=TINYINT}
        </foreach>
      </trim>
    </trim>
    where api_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.apiId,jdbcType=VARCHAR}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated generated on Sat Jul 27 21:44:17 CST 2019.-->
    insert into co_service_api
    (api_id, url, description, api_version, `status`, remark, author, need_login, need_token, 
      need_req_token, need_permit, create_time, last_update_time, `valid`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.apiId,jdbcType=VARCHAR}, #{item.url,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, 
        #{item.apiVersion,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}, 
        #{item.author,jdbcType=VARCHAR}, #{item.needLogin,jdbcType=VARCHAR}, #{item.needToken,jdbcType=VARCHAR}, 
        #{item.needReqToken,jdbcType=VARCHAR}, #{item.needPermit,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.lastUpdateTime,jdbcType=TIMESTAMP}, #{item.valid,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.srct.service.dao.entity.ServiceApi">
    <!--@mbg.generated generated on Sat Jul 27 21:44:17 CST 2019.-->
    insert into co_service_api
    (api_id, url, description, api_version, `status`, remark, author, need_login, need_token, 
      need_req_token, need_permit, create_time, last_update_time, `valid`)
    values
    (#{apiId,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{apiVersion,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{needLogin,jdbcType=VARCHAR}, #{needToken,jdbcType=VARCHAR}, 
      #{needReqToken,jdbcType=VARCHAR}, #{needPermit,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{valid,jdbcType=TINYINT})
    on duplicate key update 
    api_id = #{apiId,jdbcType=VARCHAR}, 
    url = #{url,jdbcType=VARCHAR}, 
    description = #{description,jdbcType=VARCHAR}, 
    api_version = #{apiVersion,jdbcType=VARCHAR}, 
    `status` = #{status,jdbcType=VARCHAR}, 
    remark = #{remark,jdbcType=VARCHAR}, 
    author = #{author,jdbcType=VARCHAR}, 
    need_login = #{needLogin,jdbcType=VARCHAR}, 
    need_token = #{needToken,jdbcType=VARCHAR}, 
    need_req_token = #{needReqToken,jdbcType=VARCHAR}, 
    need_permit = #{needPermit,jdbcType=VARCHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}, 
    `valid` = #{valid,jdbcType=TINYINT}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.srct.service.dao.entity.ServiceApi">
    <!--@mbg.generated generated on Sat Jul 27 21:44:17 CST 2019.-->
    insert into co_service_api
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="apiId != null">
        api_id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="apiVersion != null">
        api_version,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="needLogin != null">
        need_login,
      </if>
      <if test="needToken != null">
        need_token,
      </if>
      <if test="needReqToken != null">
        need_req_token,
      </if>
      <if test="needPermit != null">
        need_permit,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="valid != null">
        `valid`,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="apiId != null">
        #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="apiVersion != null">
        #{apiVersion,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="needLogin != null">
        #{needLogin,jdbcType=VARCHAR},
      </if>
      <if test="needToken != null">
        #{needToken,jdbcType=VARCHAR},
      </if>
      <if test="needReqToken != null">
        #{needReqToken,jdbcType=VARCHAR},
      </if>
      <if test="needPermit != null">
        #{needPermit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="apiId != null">
        api_id = #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="apiVersion != null">
        api_version = #{apiVersion,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="needLogin != null">
        need_login = #{needLogin,jdbcType=VARCHAR},
      </if>
      <if test="needToken != null">
        need_token = #{needToken,jdbcType=VARCHAR},
      </if>
      <if test="needReqToken != null">
        need_req_token = #{needReqToken,jdbcType=VARCHAR},
      </if>
      <if test="needPermit != null">
        need_permit = #{needPermit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        `valid` = #{valid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
</mapper>